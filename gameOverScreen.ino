const byte GameOverScreen[] PROGMEM = {88,27,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x11,0x0,0x0,0x0,0x8,0x80,0x0,0x30,0x18,0xC,0xFF,0x22,0x22,0x0,0x4,0x44,0x4F,0x80,0x38,0x1C,0xC,0xC1,0xD4,0x45,0x0,0xA,0x22,0xB8,0x40,0x68,0x1C,0x1C,0xC0,0x8,0x88,0x80,0x11,0x11,0x0,0x20,0x4C,0x1E,0x14,0xC0,0x45,0x52,0x40,0x24,0xAA,0x20,0x20,0x4C,0x1A,0x24,0xC0,0xA2,0x29,0x20,0x49,0x44,0x50,0x0,0xC4,0x1A,0x24,0xFD,0x10,0x4,0x90,0x92,0x0,0x88,0x0,0x86,0x1B,0x24,0xC0,0xA2,0x29,0x20,0x49,0x44,0x51,0xE1,0xFE,0x19,0x44,0xC0,0x45,0x52,0x40,0x24,0xAA,0x20,0x21,0x82,0x19,0x44,0xC0,0xC,0x88,0x80,0x11,0x13,0x0,0x21,0x3,0x19,0xC4,0xC0,0x12,0x45,0x0,0xA,0x24,0x80,0x23,0x1,0x18,0x84,0xC0,0xA9,0x22,0x0,0x4,0x49,0x5E,0x62,0x1,0x98,0x84,0xFF,0x44,0x80,0x0,0x0,0x12,0x21,0x80,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x8,0x80,0x4,0x0,0x0,0x0,0x0,0x11,0x0,0x0,0x4,0x44,0x4F,0x89,0x0,0xDF,0xE3,0xF9,0xA2,0x22,0x0,0xA,0x22,0xB9,0xD1,0x80,0x90,0x2,0xA,0x54,0x45,0x0,0x11,0x11,0x9,0x40,0x81,0x90,0x2,0x4,0x8,0x88,0x80,0x24,0xAA,0x21,0x30,0xC1,0x90,0x2,0x2,0x45,0x52,0x40,0x49,0x44,0x51,0x18,0x41,0x10,0x2,0x2,0xA2,0x29,0x20,0x92,0x0,0x89,0xF8,0x43,0x1F,0xE2,0xD,0x10,0x4,0x90,0x49,0x44,0x50,0xF8,0x62,0x10,0x3,0xF8,0xA2,0x29,0x20,0x24,0xAA,0x20,0xF8,0x26,0x10,0x2,0x30,0x45,0x52,0x40,0x11,0x13,0x0,0xF0,0x34,0x10,0x2,0x18,0xC,0x88,0x80,0xA,0x24,0x8F,0xE0,0x14,0x10,0x2,0xF,0x12,0x45,0x0,0x4,0x49,0x53,0xC8,0x18,0x10,0x2,0x4,0xA9,0x22,0x0,0x0,0x12,0x20,0x4,0x8,0x1F,0xE2,0x2,0x44,0x80,0x0,};
const byte TableauScore[] PROGMEM = {88,48,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x60,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xC0,0x9F,0xC0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x7F,0x20,0x90,0x20,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x81,0x20,0x60,0x17,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFD,0x0,0xC0,0x20,0xF6,0xC,0x10,0x41,0x4,0x10,0x0,0x5,0xE0,0x80,0x21,0x55,0x14,0x97,0x5D,0x55,0xD5,0x26,0x65,0x50,0x80,0x21,0x54,0xA5,0x91,0x45,0x55,0x15,0x2,0x25,0x50,0x80,0x20,0xF4,0x44,0x97,0x4D,0x75,0xD6,0x62,0x25,0xE0,0x80,0x10,0x24,0xA4,0x94,0x45,0x14,0x55,0x22,0x24,0x81,0x0,0xF,0xC5,0x15,0xD7,0x5D,0x15,0xD5,0x77,0x74,0x7E,0x0,0xC,0xC6,0xC,0x10,0x41,0x4,0x10,0x0,0x4,0x66,0x0,0xC,0xC7,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0x66,0x0,0xB,0x44,0x4,0x10,0x41,0x4,0x10,0x0,0x4,0x5A,0x0,0x4,0x84,0xE4,0x10,0x41,0x4,0x10,0x0,0x4,0x24,0x0,0x7,0x5,0x14,0x10,0x41,0x4,0x10,0x0,0x4,0x1C,0x0,0x0,0x5,0xB4,0x10,0x41,0x4,0x10,0x0,0x4,0x0,0x0,0x80,0xD,0x54,0x10,0x41,0x4,0x10,0x0,0x6,0x0,0x20,0x47,0x95,0xB4,0x10,0x41,0x4,0x10,0x0,0x5,0x1E,0x40,0x2F,0xC4,0x4,0x10,0x41,0x4,0x10,0x0,0x4,0xBF,0x0,0xB,0xE7,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0x2F,0x80,0x33,0xF4,0x4,0x10,0x41,0x4,0x10,0x0,0x4,0xCF,0xC0,0x63,0xF4,0xE4,0x10,0x41,0x4,0x10,0x0,0x5,0x8F,0xC0,0x7E,0x35,0xB4,0x10,0x41,0x4,0x10,0x0,0x5,0xF8,0xC0,0x40,0x35,0x14,0x10,0x41,0x4,0x10,0x0,0x5,0x0,0xC0,0x40,0x25,0x54,0x10,0x41,0x4,0x10,0x0,0x5,0x0,0x80,0x72,0x24,0xA4,0x10,0x41,0x4,0x10,0x0,0x5,0xC8,0x80,0x25,0x14,0x4,0x10,0x41,0x4,0x10,0x0,0x4,0x94,0x40,0x28,0x8F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0xA2,0x20,0x45,0x14,0x4,0x10,0x41,0x4,0x10,0x0,0x5,0x14,0x40,0xA2,0x24,0xE4,0x10,0x41,0x4,0x10,0x0,0x6,0x88,0x80,0x10,0x55,0x54,0x10,0x41,0x4,0x10,0x0,0x4,0x41,0x40,0x28,0xCD,0xF4,0x10,0x41,0x4,0x10,0x0,0x4,0xA3,0x20,0x45,0x25,0xF4,0x10,0x41,0x4,0x10,0x0,0x5,0x14,0x80,0x88,0x94,0xE4,0x10,0x41,0x4,0x10,0x0,0x6,0x22,0x40,0x10,0x4C,0x4,0x10,0x41,0x4,0x10,0x0,0x4,0x41,0x20,0x28,0xA7,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0xA2,0x80,0x45,0x14,0x4,0x10,0x41,0x4,0x10,0x0,0x5,0x14,0x40,0x8,0x84,0xE4,0x10,0x41,0x4,0x10,0x0,0x4,0x22,0x0,0x15,0x45,0x54,0x10,0x41,0x4,0x10,0x0,0x4,0x55,0x0,0x22,0x25,0xF4,0x10,0x41,0x4,0x10,0x0,0x4,0x88,0x80,0x48,0x95,0xF4,0x10,0x41,0x4,0x10,0x0,0x5,0x22,0x40,0x25,0x24,0xE4,0x10,0x41,0x4,0x10,0x0,0x4,0x94,0x80,0x12,0x44,0x4,0x10,0x41,0x4,0x10,0x0,0x4,0x49,0x0,0x8,0x87,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0x22,0x0,0x5,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x14,0x0,0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,};
const byte MiniCoupe[] PROGMEM = {8,5,0x70,0xF8,0x70,0x20,0x70,};

void gameOverScreen()
{
  //endGame();
  
    /*bool masterIsAlive = masterPlayer.isAlive;
    bool slaveIsAlive = slavePlayer.isAlive;
    masterPlayer.isAlive = true;
    slavePlayer.isAlive = true;*/
    isOnScoreScreen = true;
  while(true)
  {
    if(gb.update())
    {
      gb.display.drawBitmap(0,0,GameOverScreen);
     /* gb.display.cursorX = 27 + random(0,2);
      gb.display.cursorY = 32 + random(0,2);

        if( (isMaster && masterIsAlive) || (!isMaster && slaveIsAlive))
        {
          gb.display.println(F("YOU WIN!"));
        }
        else
        {
          gb.display.println(F("YOU LOOSE!"));
        }*/
      
      gb.display.cursorX = 10 ;
      gb.display.cursorY = 42;
      gb.display.print(F("Press any key"));
      if(gb.buttons.pressed(BTN_A) ||gb.buttons.pressed(BTN_B) ||gb.buttons.pressed(BTN_C))
      {
        break;
      }
    }
  }
    isOnScoreScreen = false;
}

bool ScoreScreen()
{
  bool masterIsAlive = masterPlayer.isAlive;
    bool slaveIsAlive = slavePlayer.isAlive;
  endGame();
    isOnScoreScreen = true;
  while(true)
  {
    if(gb.update())
    {
      if(!isSingle)
      {
        if(isMaster)
        {
           updateMaster();
        }
        else
        {
          updateSlave();
        }
      }
      
      gb.display.drawBitmap(0,0,TableauScore);
      //gb.display.cursorX = 0;
      //gb.display.cursorY = 0;
      for(uint8_t i = 0; i<NB_MAZE;i++)
      {
        if(winner[i] == 0)
          continue;
        // 1, 1 : 22,14 + 7 en x par maze passer et 8 en y par joueur
        gb.display.drawBitmap((22 +(6*i)), (6 + (8*winner[i])),MiniCoupe);
      }
      
    masterPlayer.isAlive = true;
    slavePlayer.isAlive = true;
     
      if(gb.buttons.pressed(BTN_A) ||gb.buttons.pressed(BTN_B))
      {
    isOnScoreScreen = false;
        return true;
      }
      
      if(gb.buttons.pressed(BTN_C))
      {
    isOnScoreScreen = false;
        return false;
      }
    }
  }
}

void endGame()
{
  int timer =0;
  while(1){
    if(gb.update()){

      DrawMaze();
      DrawPlayers();
      DrawBombes();

      //gb.display.drawBitmap(x-1, y-1, playerSprite, playerDir, NOFLIP);
      gb.display.setColor(WHITE);
      gb.display.fillRect(0,0,timer*2,LCDHEIGHT);
      gb.display.fillRect(LCDWIDTH-timer*2,0,timer*2,LCDHEIGHT);
      gb.display.setColor(BLACK, WHITE);
      gb.display.cursorX = 12;
      gb.display.cursorY = 1;
      //gb.display.print(F("GAME OVER!"));
      timer++;
      if(timer==((LCDWIDTH/4)+10))
        break;
    }
  }
}

